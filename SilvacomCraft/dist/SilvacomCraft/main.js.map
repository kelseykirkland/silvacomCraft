{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiServer: 'http://localhost:5000/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SilvacomCraft';\n\n  // emtpy weather json object to be set\n  weather: any ={\n    \"location\": {\n        \"name\": \"\",\n        \"country\": \"\",\n        \"localtime\": \"\"\n    },\n    \"current\": {\n        \"temp_c\": 0,\n        \"temp_f\": 0,\n        \"is_day\": 1,\n        \"condition\": {\n            \"text\": \"\",\n            \"icon\": \"\",\n            \"code\": 1003\n        }\n    }\n  }\n\n  info: any;\n  Cities: any = []\n  rootURL = 'http://127.0.0.1:5000/api';\n  apiKey = '76b8ebdad54f4237b4144217231004'\n\n  constructor(private http: HttpClient) { }\n\n  // setting the city selected from drop down\n  selectedCity = this.Cities;\n  \n  // makes call to backend Flask api\n  // params: the city label (ei. \"Venice\") \n  // returns: the http get response\n  weatherApiCall(cityName:string): Observable<any> {\n    let queryParams = new HttpParams();\n    queryParams = queryParams.append(\"cityName\", cityName)\n    return this.http.get(this.rootURL+\"/weather/\"+cityName)\n  }\n\n  // get weather data from api call and saves response json info to this.weather object\n  // params: selected city object \n  // returns: the http get response\n  getWeather(city:any) {\n    console.log(\"Getting the Weather for:\"+city.label)\n    this.weatherApiCall(city.label).subscribe((response) => {\n      console.log(\"response received\")\n      this.weather=response\n      console.log(this.weather)\n    })\n  }\n\n  // makes call to backend Flask api\n  // returns: the http get response\n  getCities(): Observable<any> {\n    return this.http.get(this.rootURL+\"/cities\")\n  }\n\n  // gets city list from Flask backend\n  // sets this.City to list recieved \n  ngOnInit() {\n    this.getCities().subscribe((response) => {\n      console.log(\"response received\")\n      this.info=response\n      this.Cities=this.info.Cities\n    })\n  }\n}\n\n  \n\n","\n\n<div class=\"content\" role=\"main\">\n\n  <h1>Trip Planner</h1>\n  <form>\n    <select class=\"dropDownBox\" \n            name=\"select\" \n            (change)=\"getWeather(selectedCity)\"\n            [(ngModel)]=\"selectedCity\">\n      <option *ngFor=\"let city of Cities\" [ngValue]=\"city\">\n        {{ city.label }}\n      </option>\n    </select>\n  \n    <div style=\"padding-top: 10px\">\n      <textarea\n        class=\"title\"\n        name=\"displaySelectedName\"\n        [(ngModel)]=\"selectedCity.name\"\n      ></textarea>\n    </div>\n  </form>\n    \n  <div >\n    <textarea \n        class=\"textArea\"\n        name=\"displaySelectedLabel\"\n        [(ngModel)]=\"selectedCity.description\"\n      ></textarea>\n  </div>\n  \n  <h3>Current Weather</h3>\n  <div class=\"outputBox\" >\n    <div id=\"1Row\" class=\"float-container\">\n      <p id=\"datetime\">{{ weather.location.localtime }}</p>\n    </div>\n\n    <div id=\"2Row\" class=\"float-container\">\n      \n      <div class=\"float-child\">\n        <p id=\"tempC\">{{ weather.current.temp_c }}\n          <span>&#176;</span>\n          C\n        </p>\n        <p id=\"tempF\">{{ weather.current.temp_f }}\n          <span>&#176;</span>\n          F\n        </p>\n      </div>\n\n      <div class=\"float-child\">\n        <p id=\"condition\">{{ weather.current.condition.text }}</p> \n        <span class=\"icon\"></span>\n      </div>\n    </div>\n    \n  </div>\n\n</div>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}